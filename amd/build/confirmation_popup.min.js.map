{"version":3,"sources":["../src/confirmation_popup.js"],"names":["define","$","ajax","notification","init","on","type","attr","id","promises","call","methodname","args","done","response","deleteConfirmation","confirm","text","promises2","redirect","location","reload","window","href","fail","exception"],"mappings":"AAuBAA,OAAM,uCAAC,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAAD,CAA+C,SAAUC,CAAV,CAAaC,CAAb,CAAmBC,CAAnB,CAAiC,CAsDlF,MAAO,CACHC,IAAI,CA7CG,QAAPA,CAAAA,IAAO,EAAY,CAEnBH,CAAC,CAAC,+BAAD,CAAD,CAAmCI,EAAnC,CAAsC,OAAtC,CAA+C,UAAY,IAEnDC,CAAAA,CAAI,CAAGL,CAAC,CAAC,IAAD,CAAD,CAAQM,IAAR,CAAa,kBAAb,CAF4C,CAGnDC,CAAE,CAAGP,CAAC,CAAC,IAAD,CAAD,CAAQM,IAAR,CAAa,aAAb,CAH8C,CAKnDE,CAAQ,CAAGP,CAAI,CAACQ,IAAL,CAAU,CAAC,CACtBC,UAAU,CAAE,wCADU,CAEtBC,IAAI,CAAE,CACFN,IAAI,CAAEA,CADJ,CAEFE,EAAE,CAAEA,CAFF,CAFgB,CAAD,CAAV,CALwC,CAavDC,CAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiB,SAAUC,CAAV,CAAoB,CACjC,GAAIC,CAAAA,CAAkB,CAAGC,OAAO,CAACF,CAAQ,CAACG,IAAV,CAAhC,CAEA,GAAI,IAAAF,CAAJ,CAAgC,CAE5B,GAAIG,CAAAA,CAAS,CAAGhB,CAAI,CAACQ,IAAL,CAAU,CAAC,CACvBC,UAAU,CAAE,uCADW,CAEvBC,IAAI,CAAE,CACFN,IAAI,CAAEA,CADJ,CAEFE,EAAE,CAAEA,CAFF,CAFiB,CAAD,CAAV,CAAhB,CAQAU,CAAS,CAAC,CAAD,CAAT,CAAaL,IAAb,CAAkB,SAASC,CAAT,CAAmB,CACjC,GAAyB,QAArB,EAAAA,CAAQ,CAACK,QAAb,CAAmC,CAC/BC,QAAQ,CAACC,MAAT,EACH,CAFD,IAEO,CACHC,MAAM,CAACF,QAAP,CAAgBG,IAAhB,CAAuBT,CAAQ,CAACK,QACnC,CACD,QACH,CAPD,EAOGK,IAPH,CAOQrB,CAAY,CAACsB,SAPrB,EAQA,QACH,CACJ,CAvBD,EAuBGD,IAvBH,CAuBQrB,CAAY,CAACsB,SAvBrB,EAwBA,QACH,CAtCD,CAuCH,CAGM,CAGV,CAzDK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Java Script functions for dynamically displaying confirmation popups for certain actions.\n *\n * @package    block_onboarding\n * @copyright  2021 Westfälische Wilhelms-Universität Münster\n * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function ($, ajax, notification) {\n\n    /**\n     * Initializes 'Confirm'-button click event listener.\n     * Confirmation popups are triggered for HTML tags implementing the 'block-onboarding-confirm-btn' CSS class.\n     * These HTML tags also contain HTML variables which are then passed on to the externallib.php methods to determine\n     * the specific object and the type of action to be performed with the object.\n     *\n     * @returns {Boolean} false\n     */\n    var init = function () {\n        // JQuery click event listener for 'Confirm'-buttons.\n        $('.block-onboarding-confirm-btn').on('click', function () {\n            // Gets the HTML variables of the HTML tag implementing the 'block-onboarding-confirm-btn' class.\n            var type = $(this).attr('onb-data-context');\n            var id = $(this).attr('onb-data-id');\n            // AJAX call to externallib.php method to generate popup prompt.\n            var promises = ajax.call([{\n                methodname: 'block_onboarding_generate_confirmation',\n                args: {\n                    type: type,\n                    id: id\n                }\n            }]);\n            // First promise displays a confirmation popup with the returned string and waits for user confirmation.\n            promises[0].done(function (response) {\n                var deleteConfirmation = confirm(response.text);\n                // Checks whether user confirms popup prompt.\n                if (deleteConfirmation == true) {\n                    // AJAX call to externallib.php method to execute type of action for object.\n                    var promises2 = ajax.call([{\n                        methodname: 'block_onboarding_execute_confirmation',\n                        args: {\n                            type: type,\n                            id: id\n                        }\n                    }]);\n                    // Second chained promise redirects user to a certain page after executing the passed action.\n                    promises2[0].done(function(response) {\n                        if (response.redirect == \"reload\") {\n                            location.reload();\n                        } else {\n                            window.location.href = response.redirect;\n                        }\n                        return false;\n                    }).fail(notification.exception);\n                    return false;\n                }\n            }).fail(notification.exception);\n            return false;\n        });\n    };\n\n    // Returns init method to be called by PHP page implementing the function.\n    return {\n        init: init\n    };\n});"],"file":"confirmation_popup.min.js"}